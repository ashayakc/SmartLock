// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartLock.Access;

#nullable disable

namespace SmartLock.Access.Migrations
{
    [DbContext(typeof(SmartLockDbContext))]
    partial class SmartLockDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SmartLock.Model.AuditLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DoorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime");

                    b.Property<long>("OfficeId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DoorId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_AuditLog_UserId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("SmartLock.Model.Door", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OfficeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("Doors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "FrontDoor",
                            OfficeId = 1L,
                            Type = "Main"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "BackDoor",
                            OfficeId = 1L,
                            Type = "Back"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "StoreRoom",
                            OfficeId = 1L,
                            Type = "Store"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "FrontDoor",
                            OfficeId = 2L,
                            Type = "Main"
                        });
                });

            modelBuilder.Entity("SmartLock.Model.DoorRoleMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("DoorId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DoorId");

                    b.HasIndex("RoleId");

                    b.ToTable("DoorRoleMappings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DoorId = 1L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            DoorId = 1L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            DoorId = 1L,
                            RoleId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            DoorId = 1L,
                            RoleId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            DoorId = 2L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            DoorId = 2L,
                            RoleId = 3L
                        },
                        new
                        {
                            Id = 7L,
                            DoorId = 3L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            DoorId = 4L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            DoorId = 4L,
                            RoleId = 1L
                        });
                });

            modelBuilder.Entity("SmartLock.Model.Office", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Amsterdam",
                            Name = "Clay"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "Amsterdam",
                            Name = "Booking.com"
                        });
                });

            modelBuilder.Entity("SmartLock.Model.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "HeadStaff"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Engineer"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Finance"
                        });
                });

            modelBuilder.Entity("SmartLock.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("IsAdmin")
                        .HasColumnType("tinyint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasDatabaseName("IX_User_UserName");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EmailId = "sheldoncooper@gmail.com",
                            EmployeeId = "1000",
                            Firstname = "Sheldon",
                            IsAdmin = (byte)1,
                            LastName = "Cooper",
                            Password = "c2hlbGRvbg==",
                            UserName = "sheldon"
                        },
                        new
                        {
                            Id = 2L,
                            EmailId = "adia@gmail.com",
                            EmployeeId = "1001",
                            Firstname = "Adia",
                            IsAdmin = (byte)0,
                            LastName = "Bugg",
                            Password = "YWRpYQ==",
                            UserName = "adia"
                        },
                        new
                        {
                            Id = 3L,
                            EmailId = "olive@gmail.com",
                            EmployeeId = "1002",
                            Firstname = "Olive",
                            IsAdmin = (byte)0,
                            LastName = "yew",
                            Password = "b2xpdmU=",
                            UserName = "olive"
                        },
                        new
                        {
                            Id = 4L,
                            EmailId = "peg@gmail.com",
                            EmployeeId = "1003",
                            Firstname = "Peg",
                            IsAdmin = (byte)0,
                            LastName = "Legge",
                            Password = "cGVn",
                            UserName = "peg"
                        },
                        new
                        {
                            Id = 5L,
                            EmailId = "allie@gmail.com",
                            EmployeeId = "1004",
                            Firstname = "Allie",
                            IsAdmin = (byte)0,
                            LastName = "Grater",
                            Password = "YWxsaWU=",
                            UserName = "allie"
                        });
                });

            modelBuilder.Entity("SmartLock.Model.UserOfficeRoleMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("OfficeId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOfficeRoleMapping", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            OfficeId = 1L,
                            RoleId = 1L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            OfficeId = 1L,
                            RoleId = 2L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            OfficeId = 1L,
                            RoleId = 3L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            OfficeId = 1L,
                            RoleId = 4L,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            OfficeId = 2L,
                            RoleId = 1L,
                            UserId = 5L
                        });
                });

            modelBuilder.Entity("SmartLock.Model.AuditLog", b =>
                {
                    b.HasOne("SmartLock.Model.Door", "Door")
                        .WithMany("AuditLogs")
                        .HasForeignKey("DoorId")
                        .IsRequired()
                        .HasConstraintName("FK__AuditLogs__DoorI__2D27B809");

                    b.HasOne("SmartLock.Model.Office", "Office")
                        .WithMany("AuditLogs")
                        .HasForeignKey("OfficeId")
                        .IsRequired()
                        .HasConstraintName("FK__AuditLogs__Offic__2C3393D0");

                    b.HasOne("SmartLock.Model.User", "User")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__AuditLogs__UserI__2E1BDC42");

                    b.Navigation("Door");

                    b.Navigation("Office");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartLock.Model.Door", b =>
                {
                    b.HasOne("SmartLock.Model.Office", "Office")
                        .WithMany("Doors")
                        .HasForeignKey("OfficeId")
                        .IsRequired()
                        .HasConstraintName("FK__Doors__OfficeId__29572725");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("SmartLock.Model.DoorRoleMapping", b =>
                {
                    b.HasOne("SmartLock.Model.Door", "Door")
                        .WithMany("DoorRoleMappings")
                        .HasForeignKey("DoorId")
                        .IsRequired()
                        .HasConstraintName("FK__DoorRoleM__DoorI__30F848ED");

                    b.HasOne("SmartLock.Model.Role", "Role")
                        .WithMany("DoorRoleMappings")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__DoorRoleM__RoleI__31EC6D26");

                    b.Navigation("Door");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SmartLock.Model.UserOfficeRoleMapping", b =>
                {
                    b.HasOne("SmartLock.Model.Office", "Office")
                        .WithMany("UserOfficeRoleMappings")
                        .HasForeignKey("OfficeId")
                        .IsRequired()
                        .HasConstraintName("FK__UserOffic__DoorI__34C8D9D1");

                    b.HasOne("SmartLock.Model.Role", "Role")
                        .WithMany("UserOfficeRoleMappings")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserOffic__RoleI__35BCFE0A");

                    b.HasOne("SmartLock.Model.User", "User")
                        .WithMany("UserOfficeRoleMappings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserOffic__UserI__36B12243");

                    b.Navigation("Office");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartLock.Model.Door", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("DoorRoleMappings");
                });

            modelBuilder.Entity("SmartLock.Model.Office", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Doors");

                    b.Navigation("UserOfficeRoleMappings");
                });

            modelBuilder.Entity("SmartLock.Model.Role", b =>
                {
                    b.Navigation("DoorRoleMappings");

                    b.Navigation("UserOfficeRoleMappings");
                });

            modelBuilder.Entity("SmartLock.Model.User", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("UserOfficeRoleMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
